import React, { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import {
  Box,
  Typography,
  Paper,
  Grid,
  Card,
  CardContent,
  CircularProgress,
  Button,
  Container,
  Avatar,
  Chip,
  LinearProgress,
  Alert,
  Fade,
  IconButton,
} from '@mui/material';
import { 
  Print as PrintIcon, 
  Settings as SettingsIcon,
  Usb as UsbIcon,
  Speed as SpeedIcon,
  CheckCircle as CheckCircleIcon,
  Warning as WarningIcon,
  TrendingUp as TrendingUpIcon,
  Refresh as RefreshIcon,
  Add as AddIcon,
} from '@mui/icons-material';
import { Printer } from '../components/PrinterCard';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç Dashboard - –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –æ–±–∑–æ—Ä–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –±—ã—Å—Ç—Ä—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
 */
const Dashboard: React.FC = () => {
  const navigate = useNavigate();
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤
  const [printers, setPrinters] = useState<Printer[]>([]);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∏–Ω–¥–∏–∫–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
  const [loading, setLoading] = useState(true);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏
  const [error, setError] = useState<string | null>(null);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–∏–Ω—Ç–µ—Ä–∞—Ö –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    /**
     * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
     */
    const loadPrinters = async () => {
      try {
        setLoading(true);
        setError(null);
        
        // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤
        const savedPrinters = await window.electronAPI.getPrinters();
        
        // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö USB-–ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤
        const usbPrinters = await window.electronAPI.getUsbPrinters();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤
        const updatedPrinters = savedPrinters.map(printer => {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–∏–Ω—Ç–µ—Ä –≤ —Å–ø–∏—Å–∫–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö
          const connectedPrinter = usbPrinters.find(
            usbPrinter => usbPrinter.id === printer.id
          );
          
          return {
            ...printer,
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º isConnected –¥–ª—è USB-–ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤, isOnline –¥–ª—è —Å–µ—Ç–µ–≤—ã—Ö
            isConnected: !!connectedPrinter,
          };
        });
        
        setPrinters(updatedPrinters);
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤:', err);
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤');
      } finally {
        setLoading(false);
      }
    };

    loadPrinters();
  }, []);

  // –†–∞—Å—á–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –ø—Ä–∏–Ω—Ç–µ—Ä–∞–º
  // –°—á–∏—Ç–∞–µ–º –ø—Ä–∏–Ω—Ç–µ—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–º, –µ—Å–ª–∏ –ª–∏–±–æ isConnected, –ª–∏–±–æ isOnline —Ä–∞–≤–Ω–æ true
  const connectedPrinters = printers.filter(printer => printer.isConnected === true || printer.isOnline === true).length;
  const totalPrinters = printers.length;

  return (
    <Container maxWidth="xl" sx={{ py: 2 }}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ */}
      <Box sx={{ 
        display: 'flex', 
        justifyContent: 'space-between', 
        alignItems: 'center', 
        mb: 4,
        flexWrap: 'wrap',
        gap: 2,
      }}>
        <Box>
          <Typography 
            variant="h3" 
            gutterBottom
            sx={{ 
              fontWeight: 700,
              color: 'white',
              textShadow: '0px 2px 4px rgba(0, 0, 0, 0.3)',
              mb: 1,
            }}
          >
            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã
          </Typography>
          <Typography 
            variant="h6" 
            sx={{ 
              color: 'rgba(255, 255, 255, 0.8)',
              fontWeight: 400,
            }}
          >
            –£–ø—Ä–∞–≤–ª—è–π—Ç–µ –ø—Ä–∏–Ω—Ç–µ—Ä–∞–º–∏ –∏ –ø–µ—á–∞—Ç–∞–π—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
          </Typography>
        </Box>
        
        <Box sx={{ display: 'flex', gap: 1 }}>
          <IconButton
            onClick={() => window.location.reload()}
            sx={{
              background: 'rgba(255, 255, 255, 0.1)',
              color: 'white',
              backdropFilter: 'blur(10px)',
              '&:hover': {
                background: 'rgba(255, 255, 255, 0.2)',
              },
            }}
          >
            <RefreshIcon />
          </IconButton>
        </Box>
      </Box>

      {/* –ö–∞—Ä—Ç–æ—á–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ */}
      <Grid container spacing={3} sx={{ mb: 4 }}>
        {/* –ö–∞—Ä—Ç–æ—á–∫–∞ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –ø–æ –ø—Ä–∏–Ω—Ç–µ—Ä–∞–º */}
        <Grid item xs={12} sm={6} md={4}>
          <Fade in timeout={500}>
            <Card sx={{ 
              height: '100%',
              background: 'linear-gradient(135deg, #00d4aa 0%, #4ade80 100%)',
              color: 'white',
            }}>
              <CardContent sx={{ p: 3 }}>
                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                  <Avatar sx={{ 
                    bgcolor: 'rgba(255, 255, 255, 0.2)',
                    mr: 2,
                    width: 48,
                    height: 48,
                  }}>
                    <UsbIcon sx={{ color: 'white' }} />
                  </Avatar>
                  <Box>
                    <Typography variant="body2" sx={{ opacity: 0.8 }}>
                      USB –ü—Ä–∏–Ω—Ç–µ—Ä—ã
                    </Typography>
                    <Typography variant="h5" fontWeight={700}>
                      {loading ? '...' : `${connectedPrinters}/${totalPrinters}`}
                    </Typography>
                  </Box>
                </Box>
                {!loading && (
                  <Box>
                    <LinearProgress 
                      variant="determinate" 
                      value={totalPrinters > 0 ? (connectedPrinters / totalPrinters) * 100 : 0}
                      sx={{
                        height: 6,
                        borderRadius: 3,
                        backgroundColor: 'rgba(255, 255, 255, 0.3)',
                        '& .MuiLinearProgress-bar': {
                          borderRadius: 3,
                          backgroundColor: 'white',
                        },
                      }}
                    />
                    <Typography variant="body2" sx={{ mt: 1, opacity: 0.8 }}>
                      {connectedPrinters} –∞–∫—Ç–∏–≤–Ω—ã—Ö
                    </Typography>
                  </Box>
                )}
              </CardContent>
            </Card>
          </Fade>
        </Grid>

        {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ */}
        <Grid item xs={12} sm={6} md={4}>
          <Fade in timeout={700}>
            <Card sx={{ 
              height: '100%',
              background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
              color: 'white',
            }}>
              <CardContent sx={{ p: 3 }}>
                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                  <Avatar sx={{ 
                    bgcolor: 'rgba(255, 255, 255, 0.2)',
                    mr: 2,
                    width: 48,
                    height: 48,
                  }}>
                    <SpeedIcon sx={{ color: 'white' }} />
                  </Avatar>
                  <Box>
                    <Typography variant="body2" sx={{ opacity: 0.8 }}>
                      –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
                    </Typography>
                    <Typography variant="h5" fontWeight={700}>
                      –û—Ç–ª–∏—á–Ω–æ
                    </Typography>
                  </Box>
                </Box>
                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                  <CheckCircleIcon sx={{ fontSize: 16 }} />
                  <Typography variant="body2" sx={{ opacity: 0.8 }}>
                    –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç
                  </Typography>
                </Box>
              </CardContent>
            </Card>
          </Fade>
        </Grid>

        {/* –ö–∞—Ä—Ç–æ—á–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ */}
        <Grid item xs={12} sm={6} md={4}>
          <Fade in timeout={900}>
            <Card sx={{ 
              height: '100%',
              background: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',
              color: 'white',
            }}>
              <CardContent sx={{ p: 3 }}>
                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                  <Avatar sx={{ 
                    bgcolor: 'rgba(255, 255, 255, 0.2)',
                    mr: 2,
                    width: 48,
                    height: 48,
                  }}>
                    <TrendingUpIcon sx={{ color: 'white' }} />
                  </Avatar>
                  <Box>
                    <Typography variant="body2" sx={{ opacity: 0.8 }}>
                      –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å
                    </Typography>
                    <Typography variant="h5" fontWeight={700}>
                      {totalPrinters > 0 ? '100%' : '0%'}
                    </Typography>
                  </Box>
                </Box>
                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                  {totalPrinters > 0 ? (
                    <CheckCircleIcon sx={{ fontSize: 16 }} />
                  ) : (
                    <WarningIcon sx={{ fontSize: 16 }} />
                  )}
                  <Typography variant="body2" sx={{ opacity: 0.8 }}>
                    {totalPrinters > 0 ? '–ì–æ—Ç–æ–≤ –∫ –ø–µ—á–∞—Ç–∏' : '–ù–µ—Ç –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤'}
                  </Typography>
                </Box>
              </CardContent>
            </Card>
          </Fade>
        </Grid>
      </Grid>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <Box sx={{ mb: 3 }}>
        <Typography 
          variant="h4" 
          sx={{ 
            color: 'white',
            fontWeight: 600,
            mb: 2,
            textShadow: '0px 2px 4px rgba(0, 0, 0, 0.3)',
          }}
        >
          –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        </Typography>
        <Typography 
          variant="body1" 
          sx={{ 
            color: 'rgba(255, 255, 255, 0.7)',
            mb: 3,
          }}
        >
          –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã
        </Typography>
      </Box>
      
      <Grid container spacing={3}>
        {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –ø–µ—á–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞ */}
        <Grid item xs={12} sm={6} lg={6}>
          <Fade in timeout={1100}>
            <Card sx={{ 
              height: '100%',
              cursor: 'pointer',
              transition: 'all 0.3s ease-in-out',
              '&:hover': {
                transform: 'translateY(-8px) scale(1.02)',
              },
            }}>
              <CardContent sx={{ p: 4, textAlign: 'center', height: '100%', display: 'flex', flexDirection: 'column' }}>
                <Box sx={{ flexGrow: 1 }}>
                  <Box sx={{ 
                    width: 80, 
                    height: 80, 
                    borderRadius: '50%',
                    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    mx: 'auto',
                    mb: 3,
                    boxShadow: '0px 8px 32px rgba(102, 126, 234, 0.3)',
                  }}>
                    <PrintIcon sx={{ fontSize: 36, color: 'white' }} />
                  </Box>
                  
                  <Typography variant="h5" fontWeight={600} gutterBottom>
                    –ü–µ—á–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞
                  </Typography>
                  
                  <Typography variant="body1" color="text.secondary" sx={{ mb: 3, lineHeight: 1.6 }}>
                    –ë—ã—Å—Ç—Ä–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞ USB-–ø—Ä–∏–Ω—Ç–µ—Ä. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è PDF, DOC, TXT –∏ –¥—Ä—É–≥–∏–µ —Ñ–æ—Ä–º–∞—Ç—ã.
                  </Typography>
                  
                  {totalPrinters === 0 && (
                    <Alert severity="warning" sx={{ mb: 2, textAlign: 'left' }}>
                      –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ –ø—Ä–∏–Ω—Ç–µ—Ä –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
                    </Alert>
                  )}
                </Box>
                
                <Button 
                  variant="contained" 
                  size="large"
                  onClick={() => navigate('/print')}
                  disabled={totalPrinters === 0}
                  startIcon={<PrintIcon />}
                  sx={{ 
                    py: 1.5,
                    px: 4,
                    borderRadius: 3,
                    fontWeight: 600,
                  }}
                >
                  –ù–∞—á–∞—Ç—å –ø–µ—á–∞—Ç—å
                </Button>
              </CardContent>
            </Card>
          </Fade>
        </Grid>

        {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤ */}
        <Grid item xs={12} sm={6} lg={6}>
          <Fade in timeout={1300}>
            <Card sx={{ 
              height: '100%',
              cursor: 'pointer',
              transition: 'all 0.3s ease-in-out',
              '&:hover': {
                transform: 'translateY(-8px) scale(1.02)',
              },
            }}>
              <CardContent sx={{ p: 4, textAlign: 'center', height: '100%', display: 'flex', flexDirection: 'column' }}>
                <Box sx={{ flexGrow: 1 }}>
                  <Box sx={{ 
                    width: 80, 
                    height: 80, 
                    borderRadius: '50%',
                    background: 'linear-gradient(135deg, #00d4aa 0%, #4ade80 100%)',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    mx: 'auto',
                    mb: 3,
                    boxShadow: '0px 8px 32px rgba(0, 212, 170, 0.3)',
                  }}>
                    <SettingsIcon sx={{ fontSize: 36, color: 'white' }} />
                  </Box>
                  
                  <Typography variant="h5" fontWeight={600} gutterBottom>
                    –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–Ω—Ç–µ—Ä–∞–º–∏
                  </Typography>
                  
                  <Typography variant="body1" color="text.secondary" sx={{ mb: 3, lineHeight: 1.6 }}>
                    –î–æ–±–∞–≤–ª—è–π—Ç–µ, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ –∏ —É–ø—Ä–∞–≤–ª—è–π—Ç–µ USB-–ø—Ä–∏–Ω—Ç–µ—Ä–∞–º–∏. –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.
                  </Typography>
                  
                  <Box sx={{ display: 'flex', gap: 1, justifyContent: 'center', mb: 2 }}>
                    <Chip 
                      label={`${totalPrinters} –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤`}
                      color="primary"
                      variant="outlined"
                      size="small"
                    />
                    <Chip 
                      label={`${connectedPrinters} –∞–∫—Ç–∏–≤–Ω—ã—Ö`}
                      color="success"
                      variant="outlined"
                      size="small"
                    />
                  </Box>
                </Box>
                
                <Box sx={{ display: 'flex', gap: 1 }}>
                  <Button 
                    variant="contained" 
                    size="large"
                    onClick={() => navigate('/printers')}
                    startIcon={<SettingsIcon />}
                    sx={{ 
                      flexGrow: 1,
                      py: 1.5,
                      px: 3,
                      borderRadius: 3,
                      fontWeight: 600,
                    }}
                  >
                    –ù–∞—Å—Ç—Ä–æ–π–∫–∏
                  </Button>
                  <Button 
                    variant="outlined" 
                    size="large"
                    onClick={() => navigate('/printers/new')}
                    sx={{ 
                      py: 1.5,
                      px: 2,
                      borderRadius: 3,
                      borderWidth: 2,
                      '&:hover': {
                        borderWidth: 2,
                      }
                    }}
                  >
                    <AddIcon />
                  </Button>
                </Box>
              </CardContent>
            </Card>
          </Fade>
        </Grid>
      </Grid>

      {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å) */}
      {error && (
        <Box sx={{ mt: 4 }}>
          <Alert severity="error" sx={{ borderRadius: 3 }}>
            {error}
          </Alert>
        </Box>
      )}
    </Container>
  );
};

export default Dashboard;